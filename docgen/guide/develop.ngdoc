@ngdoc overview
@name Guide: Development Environment
@description
### Overview
The **Triangular** system can be used in whatever environment is presently used to construct <a target=_blank href="http://angularjs.org/">AngularJS</a> pages.

To develop in the {@link /guide/variants GAE Variant Mode} the addition of {@link #googleappengineaccess Google App Engine Access}
and a {@link /guide/server-inter#googleappengineimplementation Server GAE Variant} is required.  The latter is provided by the {@link /guide/devp-pkg#gaevariant Development Package GAE Variant}.


To develop in the {@link /guide/variants Node.js Variant Mode} the development system requires that
<a target=_blank href=http://nodejs.org/>Node.js Home Page</a> be installed and accessible on the development machine.
The {@link /guide/server-inter#modejsimplementation Server Node.js Variant} is required.
The latter is provided by the {@link /guide/devp-pkg#nodejsvariant Development Package Node.js Variant}.

The Chrome Browser is the browser of choice because of its excellent debugging facilities.

The author uses <a target=_blank href='http://multiedit.com'>MultiEdit</a> mainly because of its
excellent column edit support and its ability to save all files on a windows task switch.

The utilities provided in the `/bats` folder in the {@link /guide/devp-pkg Development Package} are designed to run in a Windows XP/Vista/7/8 environment.
If these are adapted to another platfrom the entire system should be compabtible with the alternate platfrom.

### Use of "file://" URL
The **Triangular** system has been designed to allow the testing of components using the
"file:// " URL to load the static page.  This will trigger the internal systems to access a locally defined
server.  This server sends the request header
 `Access-Control-Allow-Origin:*`
to allow this to happen.

This capability greatly speeds the development process.  Changes can be made, saved (See <a target=_blank href='http://multiedit.com'>MultiEdit TaskSwitch save feature</a>)
the Browser refresh button pressed (Usually &LT;F5>) and a test accomplished.

Since the {@link /guide/server-inter#token token} persists across Browser Refreshes a new {@link /api/tri.controller:ctrlSess#login login}
is not required for the test.

The message

<pre style="color:red;">
Blocked a frame with origin "null" from accessing a frame with origin "null". Protocols, domains, and ports must match.
</pre>

can be safely ignored.  It is caused by the template loading scheme and no way to eliminate it after a refresh was discovered.

**Note** Using `localhost:8882` ({@link /guide/variants GAE Variant}) or `localhost:8888` ({@link /guide/variants Node.js Variant}) as the host rather than the `file://` URL can also be used.  It solves the error message problem but
occasionally the browser <REFRESH> sometimes
fails to reload server side files and takes them from the browser cache instead.


### Google App Engine Access
<b>Applies to {@link /guide/variants GAE Variant}</b>.

Eventually a
<a target_blank href='http://developers.google.com/appengine/docs/whatisgoogleappengine'>Google App Engine</a> account is required.

This can be postponed by just using the locally hosted version until production mode is required. Since the need is only to run the
provided JAR files a full blown environment is not required.


### Node.js Hosting site
<b>Applies to {@link /guide/variants Node.js Variant}</b>.

Eventually a place to host the Node.js code is required.
The {@link /tutorial Tutorial Examples} use
<a target=_blank href=https://www.nodejitsu.com>NodeJitsu  Node.js Hosting</a> as a target site.  The instructions will vary if a different
Node.JS hosting site is used.

This can be postponed by just using the locally hosted version until production mode is required. It requires that
<a target=_blank href=http://nodejs.org/>Node.js Home Page</a> be installed and accessible on the development machine

### Running a local Google App Engine
<b>Applies to {@link /guide/variants GAE Variant}</b>.

The `run-ws.bat` file in the `/bats` folder in the {@link /guide/devp-pkg Development Package} can be used to start local Google App Engine web server.
It is configured to use port 8882.  This can be changed.

The {@link /guide/devp-pkg Development Package} comes with a populated Datastore with the sample applications which are also installed.  The
{@link /guide/dataprime Datastore Prime Overview} gives details on how to remove the populated Datastore.

The applications can be removed by deleting all but the `AppsConfig.js` file out of the `/war/apps` folder.

### Running a local Node.js Server
<b>Applies to {@link /guide/variants Node.js Variant}</b>.

The `run-tri.bat` file in the `/bats` folder in the {@link /guide/devp-pkg Development Package} can be used to start local Google App Engine web server.
It is configured to use port 8888.  This can be changed.

The {@link /guide/devp-pkg Development Package} comes with a populated Datastore with the sample applications which are also installed.  The
{@link /guide/dataprime Datastore Prime Overview} gives details on how to remove the populated Datastore.

The applications can be removed by deleting all but the `AppsConfig.js` file out of the `/apps` folder.


